/*
Deployment script for BrailleSortDb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "BrailleSortDb"
:setvar DefaultFilePrefix "BrailleSortDb"
:setvar DefaultDataPath "C:\Users\lynda\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\lynda\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 0d9dcfb3-af10-419b-a1d4-992b4a4f3296 is skipped, element [dbo].[Changes].[Description] (SqlSimpleColumn) will not be renamed to UpdatedItem';


GO
PRINT N'Altering Table [dbo].[Notes]...';


GO
ALTER TABLE [dbo].[Notes]
    ADD [ChangeId] INT NULL;


GO
PRINT N'Altering Table [dbo].[Symbol]...';


GO
ALTER TABLE [dbo].[Symbol]
    ADD [ChangeId] INT NULL;


GO
PRINT N'Altering Table [dbo].[Symbols]...';


GO
ALTER TABLE [dbo].[Symbols]
    ADD [ChangeId] INT NULL;


GO
PRINT N'Altering Table [dbo].[Tickets]...';


GO
ALTER TABLE [dbo].[Tickets]
    ADD [ChangeId] INT NULL;


GO
PRINT N'Altering Table [dbo].[Users]...';


GO
ALTER TABLE [dbo].[Users]
    ADD [ChangeId] INT NULL;


GO
PRINT N'Creating Table [dbo].[Changes]...';


GO
CREATE TABLE [dbo].[Changes] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [UpdatedItem]   VARCHAR (50)  NOT NULL,
    [Description]   VARCHAR (250) NOT NULL,
    [PreviousValue] VARCHAR (250) NOT NULL,
    [CurrentValue]  VARCHAR (50)  NOT NULL,
    [DateModified]  DATETIME2 (7) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Notes_Changes]...';


GO
ALTER TABLE [dbo].[Notes] WITH NOCHECK
    ADD CONSTRAINT [FK_Notes_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Symbol_Changes]...';


GO
ALTER TABLE [dbo].[Symbol] WITH NOCHECK
    ADD CONSTRAINT [FK_Symbol_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Symbols_Changes]...';


GO
ALTER TABLE [dbo].[Symbols] WITH NOCHECK
    ADD CONSTRAINT [FK_Symbols_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Tickets_Changes]...';


GO
ALTER TABLE [dbo].[Tickets] WITH NOCHECK
    ADD CONSTRAINT [FK_Tickets_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Users_Changes]...';


GO
ALTER TABLE [dbo].[Users] WITH NOCHECK
    ADD CONSTRAINT [FK_Users_Changes] FOREIGN KEY ([ChangeId]) REFERENCES [dbo].[Changes] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0d9dcfb3-af10-419b-a1d4-992b4a4f3296')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0d9dcfb3-af10-419b-a1d4-992b4a4f3296')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Notes] WITH CHECK CHECK CONSTRAINT [FK_Notes_Changes];

ALTER TABLE [dbo].[Symbol] WITH CHECK CHECK CONSTRAINT [FK_Symbol_Changes];

ALTER TABLE [dbo].[Symbols] WITH CHECK CHECK CONSTRAINT [FK_Symbols_Changes];

ALTER TABLE [dbo].[Tickets] WITH CHECK CHECK CONSTRAINT [FK_Tickets_Changes];

ALTER TABLE [dbo].[Users] WITH CHECK CHECK CONSTRAINT [FK_Users_Changes];


GO
PRINT N'Update complete.';


GO
